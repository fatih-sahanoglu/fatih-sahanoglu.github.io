{"version":3,"sources":["webpack:///./src/components/contact-form.tsx","webpack:///./src/pages/contact.tsx"],"names":["Label","styled","div","Button","button","PADDING","Input","input","Textarea","textarea","ContactForm","React","Component","constructor","props","super","state","status","this","submitForm","bind","render","m","l","onSubmit","action","method","type","name","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","ContactPage","siteTitle","get","slots","location","title","raw","href","toPhone","telephone","source","address","childMarkdownRemark","rawMarkdownBody","map","__typename","id","key","contentType","pageQuery"],"mappings":"iQAQA,MAAMA,EAAQC,IAAOC,IAAV,sEAAGD,CAAH,MAELE,EAASF,IAAOG,OAAV,uEAAGH,CAAH,wIAKeI,WAMrBC,EAAQL,IAAOM,MAAV,sEAAGN,CAAH,wHAKgBI,WAGrBG,EAAWP,IAAOQ,SAAV,yEAAGR,CAAH,wHAKaI,WAIZ,MAAMK,UAAoBC,IAAMC,UAI9CC,YAAYC,GACXC,MAAMD,GADY,KAHZE,MAAQ,CACdC,OAAQ,IAIRC,KAAKC,WAAaD,KAAKC,WAAWC,KAAKF,MAGxCG,SACC,MAAM,OAACJ,GAAUC,KAAKF,MACtB,OACC,oCACC,kBAAC,SAAD,CAAQM,EAAG,EAAGC,EAAG,IACjB,kBAAC,SAAD,CAAQD,EAAG,EAAGC,EAAG,GAChB,0BACCC,SAAUN,KAAKC,WACfM,OAAO,gCACPC,OAAO,QACP,kBAAC,MAAD,KACC,kBAAC,SAAD,CAAQJ,EAAG,GACV,+BACC,kBAACtB,EAAD,eACA,kBAACM,EAAD,CAAOqB,KAAK,QAAQC,KAAK,YAG3B,kBAAC,SAAD,MACA,kBAAC,SAAD,CAAQN,EAAG,GACV,+BACC,kBAACtB,EAAD,iBACA,kBAACQ,EAAD,CAAUoB,KAAK,cAGjB,kBAAC,SAAD,KACa,YAAXX,EAAuB,sCAAiB,kBAACd,EAAD,eAC7B,UAAXc,GAAsB,8DAS9BE,WAAWU,GACVA,EAAGC,iBACH,MAAMC,EAAOF,EAAGG,OACVC,EAAO,IAAIC,SAASH,GACpBI,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAKL,OAAQK,EAAKN,QAC3BU,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,KACpBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIlB,QACPc,EAAKW,QACLxB,KAAKyB,SAAS,CAAC1B,OAAQ,aAEvBC,KAAKyB,SAAS,CAAC1B,OAAQ,YAGzBkB,EAAIS,KAAKX,I,qCCxDIY,UAhCK/B,IACnB,MAAMgC,EAAYC,IAAIjC,EAAO,gCACvBkC,EAAQD,IAAIjC,EAAO,6BACnBmC,EAAWF,IAAIjC,EAAO,2BAC5B,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQoC,MAAUJ,EAAF,eAChB,kBAAC,MAAD,KACC,kBAAC,SAAD,CAAQK,KAAG,GACV,wCAED,kBAAC,SAAD,CAAQ7B,EAAG,EAAGC,EAAG,IACjB,kBAAC,SAAD,CAAQD,EAAG,EAAGC,EAAG,GAChB,6BACC,uBAAG6B,KAAO,OAAMC,YAAQJ,EAASK,YAAeL,EAASK,YAE1D,kBAAC,IAAD,CAAeC,OAAQN,EAASO,QAAQC,oBAAoBC,mBAE7D,kBAAC,SAAD,CAAQpC,EAAG,EAAGC,EAAG,IAChByB,EAAMW,IAAI,EAAEC,aAAYC,QAAO/C,KAE9B,kBAAC,SAAD,CAAQgD,IAAKD,GACZ,kBAAC,IAAD,eAAYE,YAAaH,GAAgB9C,MAI5C,kBAAC,EAAD,SAQG,MAAMkD,EAAY","file":"component---src-pages-contact-tsx-88d0d71848551d1eab1f.js","sourcesContent":["import React from \"react\";\nimport {Column, PADDING, Row} from \"./grid\";\nimport styled from \"styled-components\";\nexport interface Props {}\nexport interface State {\n\tstatus: string;\n}\n\nconst Label = styled.div``;\n\nconst Button = styled.button`\n\tbackground: #ddd;\n\tcolor: black;\n\tborder: 0;\n\tborder-radius: 2px;\n\tpadding: 0.5em calc(var(${PADDING}) * 1px);\n\tcursor: pointer;\n\t&:active {\n\t\tbackground: #bbb;\n\t}\n`;\nconst Input = styled.input`\n\tbackground: white;\n\tcolor: black;\n\tborder: 1px solid #ddd;\n\tborder-radius: 2px;\n\tpadding: 0.5em calc(var(${PADDING}) * 1px);\n\twidth: 100%;\n`;\nconst Textarea = styled.textarea`\n\tbackground: white;\n\tcolor: black;\n\tborder: 1px solid #ddd;\n\tborder-radius: 2px;\n\tpadding: 0.5em calc(var(${PADDING}) * 1px);\n\twidth: 100%;\n`;\n\nexport default class ContactForm extends React.Component<Props, State> {\n\tpublic state = {\n\t\tstatus: \"\"\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.submitForm = this.submitForm.bind(this);\n\t}\n\n\trender() {\n\t\tconst {status} = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Column m={1} l={2} />\n\t\t\t\t<Column m={6} l={8}>\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={this.submitForm}\n\t\t\t\t\t\taction=\"https://formspree.io/xrgyykye\"\n\t\t\t\t\t\tmethod=\"POST\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Column m={4}>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<Label>Email:</Label>\n\t\t\t\t\t\t\t\t\t<Input type=\"email\" name=\"email\" />\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column />\n\t\t\t\t\t\t\t<Column m={4}>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<Label>Message:</Label>\n\t\t\t\t\t\t\t\t\t<Textarea name=\"message\" />\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t{status === \"SUCCESS\" ? <p>Thanks!</p> : <Button>Submit</Button>}\n\t\t\t\t\t\t\t\t{status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>\n\t\t\t\t</Column>\n\t\t\t</>\n\t\t);\n\t}\n\n\tsubmitForm(ev) {\n\t\tev.preventDefault();\n\t\tconst form = ev.target;\n\t\tconst data = new FormData(form);\n\t\tconst xhr = new XMLHttpRequest();\n\t\txhr.open(form.method, form.action);\n\t\txhr.setRequestHeader(\"Accept\", \"application/json\");\n\t\txhr.onreadystatechange = () => {\n\t\t\tif (xhr.readyState !== XMLHttpRequest.DONE) return;\n\t\t\tif (xhr.status === 200) {\n\t\t\t\tform.reset();\n\t\t\t\tthis.setState({status: \"SUCCESS\"});\n\t\t\t} else {\n\t\t\t\tthis.setState({status: \"ERROR\"});\n\t\t\t}\n\t\t};\n\t\txhr.send(data);\n\t}\n}\n","import React from \"react\";\nimport {graphql} from \"gatsby\";\nimport get from \"lodash/get\";\nimport Helmet from \"react-helmet\";\nimport Layout from \"../components/layout\";\nimport {Column, Row} from \"../components/grid\";\nimport {Contentful} from \"../components/elements\";\nimport ContactForm from \"../components/contact-form\";\nimport ReactMarkdown from \"react-markdown\";\nimport {toPhone} from \"../utils/number\";\nconst ContactPage = props => {\n\tconst siteTitle = get(props, \"data.site.siteMetadata.title\");\n\tconst slots = get(props, \"data.contentfulPage.slots\");\n\tconst location = get(props, \"data.contentfulLocation\");\n\treturn (\n\t\t<Layout>\n\t\t\t<Helmet title={`${siteTitle} | Contact`} />\n\t\t\t<Row>\n\t\t\t\t<Column raw>\n\t\t\t\t\t<h1>Contact</h1>\n\t\t\t\t</Column>\n\t\t\t\t<Column m={1} l={2} />\n\t\t\t\t<Column m={6} l={8}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href={`tel:${toPhone(location.telephone)}`}>{location.telephone}</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ReactMarkdown source={location.address.childMarkdownRemark.rawMarkdownBody} />\n\t\t\t\t</Column>\n\t\t\t\t<Column m={1} l={2} />\n\t\t\t\t{slots.map(({__typename, id, ...props}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Column key={id}>\n\t\t\t\t\t\t\t<Contentful contentType={__typename} {...props} />\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<ContactForm />\n\t\t\t</Row>\n\t\t</Layout>\n\t);\n};\n\nexport default ContactPage;\n\nexport const pageQuery = graphql`\n\tquery ContactQuery {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t\tcontentfulLocation {\n\t\t\ttelephone\n\t\t\taddress {\n\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\trawMarkdownBody\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcontentfulPage(slug: {eq: \"contact\"}) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tslots {\n\t\t\t\t... on ContentfulMarkdown {\n\t\t\t\t\tid\n\t\t\t\t\ttext {\n\t\t\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\t\t\trawMarkdownBody\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t... on ContentfulGallery {\n\t\t\t\t\tid\n\t\t\t\t\timages {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tfluid(maxWidth: 1600) {\n\t\t\t\t\t\t\t...GatsbyContentfulFluid_withWebp\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t... on ContentfulHero {\n\t\t\t\t\tid\n\t\t\t\t\tautoplay\n\t\t\t\t\tcards {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tbackgroundColor\n\t\t\t\t\t\tbackgroundImage {\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\tfluid(maxWidth: 1600, maxHeight: 600) {\n\t\t\t\t\t\t\t\t...GatsbyContentfulFluid_withWebp\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody {\n\t\t\t\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\t\t\t\trawMarkdownBody\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\theadline {\n\t\t\t\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\t\t\t\trawMarkdownBody\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t... on ContentfulLocation {\n\t\t\t\t\tid\n\t\t\t\t\tlocation {\n\t\t\t\t\t\tlat\n\t\t\t\t\t\tlon\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t... on ContentfulVideo {\n\t\t\t\t\tid\n\t\t\t\t\tvimeo\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}