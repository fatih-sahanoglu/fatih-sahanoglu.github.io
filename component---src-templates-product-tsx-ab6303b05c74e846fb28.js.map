{"version":3,"sources":["webpack:///./src/components/image.tsx","webpack:///./src/components/fluid-type.ts","webpack:///./src/components/tabs.tsx","webpack:///./src/templates/product.tsx"],"names":["Img","styled","GatsbyImg","FluidType","div","props","minFontSize","maxFontSize","center","Tab","button","attrs","role","selected","toString","PADDING","TabBar","TabContent","CenterBox","Box","FlexStretch","Stretch","injectIntl","siteTitle","get","post","images","autoplay","tabs","description","childMarkdownRemark","rawMarkdownBody","usage","Tip","tip","tabEntries","Object","entries","goTo","length","initiallySelected","setSelected","React","useState","useCallback","index","useTabs","Helmet","title","name","intl","messages","products","raw","size","as","l","removeGutter","removePadding","clip","ClipSlides","right","reverse","relative","map","image","i","key","alt","fluid","flex","alignSelf","tab","onClick","disabled","content","source","pageQuery"],"mappings":"4FAAA,uEAGO,MAAMA,EAAMC,YAAOC,KAAV,iEAAGD,CAAH,kB,kCCDhB,MAAME,EAFN,UAEkBF,EAAOG,IAAV,4EAAGH,CAAH,wTAKKI,GAASA,EAAMC,YACfD,GAASA,EAAME,YAMpBF,GAAUA,EAAMG,OAAS,SAAW,QAOpCL,O,kQCjBR,MAkBMM,EAAMR,IAAOS,OAAOC,MAAON,IAAD,CACtCO,KAAM,MACN,gBAAiBP,EAAMQ,SAASC,cAFjB,4DAAGb,CAAH,4LASC,EAAEY,cAAeA,EAAW,eAAiB,cAIrCE,WAGZC,EAASf,IAAOG,IAAV,+DAAGH,CAAH,iCAKNgB,EAAahB,IAAOG,IAAV,mEAAGH,CAAH,iBACX,EAAEY,cAAeA,EAAW,QAAU,Q,gBCnBlD,MAAMK,EAAYjB,YAAOkB,OAAV,wEAAGlB,CAAH,uFAOTmB,EAAcnB,YAAOoB,KAAV,0EAAGpB,CAAH,0BAsFFqB,+BAjFwBjB,IACtC,MAAMkB,EAAYC,IAAInB,EAAO,gCACvBoB,EAAOD,IAAInB,EAAO,0BAClBqB,EAASF,IAAIC,EAAM,kBACnBE,EAAWH,IAAIC,EAAM,YACrBG,EAAO,CACZ,aAAcH,EAAKI,YAAYC,oBAAoBC,gBACnD,aAAcN,EAAKO,MAAMF,oBAAoBC,gBAC7CE,IAAKR,EAAKS,IAAIJ,oBAAoBC,iBAE7BI,EAAaC,OAAOC,QAAQT,IAC3Bf,EAAUyB,GD5CK,EACtBC,EACAC,EAAoB,KAEpB,MAAO3B,EAAU4B,GAAeC,IAAMC,SAASH,GAO/C,MAAO,CAAC3B,EANK6B,IAAME,YACjBC,IACAJ,EAAYI,IAEb,CAACJ,MCmCuBK,CAAQX,EAAWI,QAE5C,OACC,kBAAC,IAAD,KACC,kBAACQ,EAAA,EAAD,CAAQC,MAAQ,GAAEvB,EAAKwB,UAAU5C,EAAM6C,KAAKC,SAASC,cAAc7B,MACnE,kBAAC,MAAD,KACC,kBAAC,SAAD,CAAQ8B,KAAG,GACV,kBAAC,IAAD,CAASC,KAAK,MACd,kBAAC,IAAD,CAAWC,GAAG,KAAKjD,YAAa,GAAIC,YAAa,IAAKC,QAAM,GAC1DiB,EAAKwB,MAEP,kBAAC,IAAD,CAASK,KAAK,OAEf,kBAAC,SAAD,CAAQE,EAAG,GACT9B,GACA,kBAAC,MAAD,CAAK+B,cAAY,EAACC,eAAa,GAC9B,kBAAC,IAAD,CAAU/B,SAAUA,GACnB,kBAAC,IAAD,CAAQgC,KAAMC,IAAWC,MAAOC,SAAO,EAACC,UAAQ,GAC9CrC,EAAOsC,IAAI,CAACC,EAAOC,IACnB,kBAAC,IAAD,CAAWC,IAAM,GAAEF,EAAMjB,SAASkB,IAAKrB,MAAOqB,EAAGb,KAAG,GACnD,kBAAC,IAAD,CAAKe,IAAKH,EAAMjB,MAAOqB,MAAOJ,EAAMI,WAIvC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAACjD,EAAD,KACC,kBAACF,EAAD,CAAWoD,MAAI,EAACC,UAAU,WACzB,kBAAC,IAAD,aASR,kBAAC,SAAD,CAAQf,EAAG,EAAGH,KAAG,GAChB,kBAACrC,EAAD,KACEmB,EAAW6B,IAAI,EAAEQ,GAAM3B,IAEtB,kBAACpC,EAAD,CACC0D,IAAKK,EACLC,QAAS,KACRnC,EAAKO,IAENhC,SAAUA,IAAagC,EACvB6B,SAAU7D,IAAagC,GACtB2B,KAKL,kBAAC,MAAD,CAAKnB,KAAG,GACNlB,EAAW6B,IAAI,EAAE,CAAEW,GAAU9B,IAE5B,kBAAC,SAAD,CAAQsB,IAAKtB,GACZ,kBAAC5B,EAAD,CAAYJ,SAAUA,IAAagC,GAClC,kBAAC,IAAD,CAAe+B,OAAQD,aAc1B,MAAME,EAAY","file":"component---src-templates-product-tsx-ab6303b05c74e846fb28.js","sourcesContent":["import styled from \"styled-components\";\nimport GatsbyImg from \"gatsby-image\";\n\nexport const Img = styled(GatsbyImg)`\n\twidth: 100%;\n`;\n","import styled from \"styled-components\";\n\nconst FluidType = styled.div<{\n\tminFontSize: number;\n\tmaxFontSize: number;\n\tcenter?: boolean;\n}>`\n\t--min-font-size: ${props => props.minFontSize};\n\t--max-font-size: ${props => props.maxFontSize};\n\t--min-width: 320;\n\t--max-width: 1280;\n\tmargin: 0;\n\tline-height: 1;\n\tfont-family: magneta, serif;\n\ttext-align: ${props => (props.center ? \"center\" : \"left\")};\n\tfont-size: calc(\n\t\tvar(--min-font-size) * 1px + (var(--max-font-size) - var(--min-font-size)) *\n\t\t\t((100vw - var(--min-width) * 1px) / (var(--max-width) - var(--min-width)))\n\t);\n`;\n\nexport default FluidType;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport {PADDING} from \"./grid\";\n\nexport const useTabs = (\n\tlength: number,\n\tinitiallySelected = 0\n): [number, (index: number) => void] => {\n\tconst [selected, setSelected] = React.useState(initiallySelected);\n\tconst goTo = React.useCallback(\n\t\t(index: number) => {\n\t\t\tsetSelected(index);\n\t\t},\n\t\t[setSelected]\n\t);\n\treturn [selected, goTo];\n};\n\ninterface TabProps {\n\tselected?: boolean;\n}\n\nexport const Tab = styled.button.attrs((props: TabProps) => ({\n\trole: \"tab\",\n\t\"aria-selected\": props.selected.toString()\n}))<TabProps>`\n\tappearance: none;\n\tborder-radius: 0;\n\tfont-size: 1em;\n\tborder-style: solid;\n\tborder-width: 0 0 4px 0;\n\tborder-color: ${({selected}) => (selected ? \"currentColor\" : \"transparent\")};\n\tbackground: none;\n\tcolor: inherit;\n\tcursor: pointer;\n\tpadding: 1em calc(var(${PADDING}) * 1px);\n`;\n\nexport const TabBar = styled.div`\n\tbackground: #fff;\n\tcolor: #000;\n`;\n\nexport const TabContent = styled.div<TabProps>`\n\tdisplay: ${({selected}) => (selected ? \"block\" : \"none\")};\n`;\n","import React from \"react\";\nimport {graphql} from \"gatsby\";\nimport get from \"lodash/get\";\nimport {Helmet} from \"react-helmet\";\nimport Layout from \"../components/layout\";\nimport {Box, Column, Row} from \"../components/grid\";\nimport {Img} from \"../components/image\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n\tCarousel,\n\tCarouselNav,\n\tCarouselPageNumbers,\n\tClipSlides,\n\tFadePanel,\n\tNav,\n\tSlides\n} from \"../components/carousel\";\nimport FluidType from \"../components/fluid-type\";\nimport {Spacing} from \"../components/spacing\";\nimport styled from \"styled-components\";\nimport {Stretch} from \"../components/spacing/stretch\";\n\nimport {Tab, TabBar, TabContent, useTabs} from \"../components/tabs\";\nimport {injectIntl} from \"gatsby-plugin-intl\";\n\nconst CenterBox = styled(Box)`\n\talign-items: center;\n\talign-content: center;\n\tjustify-content: center;\n\ttext-align: center;\n`;\n\nconst FlexStretch = styled(Stretch)`\n\tflex: 1;\n\tdisplay: flex;\n`;\n\nconst ProductTemplate: React.FC<any> = props => {\n\tconst siteTitle = get(props, \"data.site.siteMetadata.title\");\n\tconst post = get(props, \"data.contentfulProduct\");\n\tconst images = get(post, \"gallery.images\");\n\tconst autoplay = get(post, \"autoplay\");\n\tconst tabs = {\n\t\t\"What it is\": post.description.childMarkdownRemark.rawMarkdownBody,\n\t\t\"How to use\": post.usage.childMarkdownRemark.rawMarkdownBody,\n\t\tTip: post.tip.childMarkdownRemark.rawMarkdownBody\n\t};\n\tconst tabEntries = Object.entries(tabs);\n\tconst [selected, goTo] = useTabs(tabEntries.length);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Helmet title={`${post.name} | ${props.intl.messages.products} | ${siteTitle}`} />\n\t\t\t<Row>\n\t\t\t\t<Column raw>\n\t\t\t\t\t<Spacing size=\"l\" />\n\t\t\t\t\t<FluidType as=\"h1\" minFontSize={40} maxFontSize={100} center>\n\t\t\t\t\t\t{post.name}\n\t\t\t\t\t</FluidType>\n\t\t\t\t\t<Spacing size=\"l\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column l={8}>\n\t\t\t\t\t{images && (\n\t\t\t\t\t\t<Box removeGutter removePadding>\n\t\t\t\t\t\t\t<Carousel autoplay={autoplay}>\n\t\t\t\t\t\t\t\t<Slides clip={ClipSlides.right} reverse relative>\n\t\t\t\t\t\t\t\t\t{images.map((image, i) => (\n\t\t\t\t\t\t\t\t\t\t<FadePanel key={`${image.title}:${i}`} index={i} raw>\n\t\t\t\t\t\t\t\t\t\t\t<Img alt={image.title} fluid={image.fluid} />\n\t\t\t\t\t\t\t\t\t\t</FadePanel>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Slides>\n\t\t\t\t\t\t\t\t<Nav>\n\t\t\t\t\t\t\t\t\t<CarouselNav>\n\t\t\t\t\t\t\t\t\t\t<FlexStretch>\n\t\t\t\t\t\t\t\t\t\t\t<CenterBox flex alignSelf=\"stretch\">\n\t\t\t\t\t\t\t\t\t\t\t\t<CarouselPageNumbers />\n\t\t\t\t\t\t\t\t\t\t\t</CenterBox>\n\t\t\t\t\t\t\t\t\t\t</FlexStretch>\n\t\t\t\t\t\t\t\t\t</CarouselNav>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</Column>\n\t\t\t\t<Column l={4} raw>\n\t\t\t\t\t<TabBar>\n\t\t\t\t\t\t{tabEntries.map(([tab], index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\tkey={tab}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tgoTo(index);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tselected={selected === index}\n\t\t\t\t\t\t\t\t\tdisabled={selected === index}>\n\t\t\t\t\t\t\t\t\t{tab}\n\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</TabBar>\n\t\t\t\t\t<Row raw>\n\t\t\t\t\t\t{tabEntries.map(([, content], index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Column key={index}>\n\t\t\t\t\t\t\t\t\t<TabContent selected={selected === index}>\n\t\t\t\t\t\t\t\t\t\t<ReactMarkdown source={content} />\n\t\t\t\t\t\t\t\t\t</TabContent>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Row>\n\t\t\t\t</Column>\n\t\t\t</Row>\n\t\t</Layout>\n\t);\n};\n\nexport default injectIntl(ProductTemplate);\n\nexport const pageQuery = graphql`\n\tquery ProductBySlug($slug: String!, $locale: String) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t\tcontentfulProduct(slug: {eq: $slug}, node_locale: {eq: $locale}) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tname\n\t\t\tprice\n\t\t\tautoplay\n\t\t\tdescription {\n\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\trawMarkdownBody\n\t\t\t\t}\n\t\t\t}\n\t\t\ttip {\n\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\trawMarkdownBody\n\t\t\t\t}\n\t\t\t}\n\t\t\tusage {\n\t\t\t\tchildMarkdownRemark {\n\t\t\t\t\trawMarkdownBody\n\t\t\t\t}\n\t\t\t}\n\t\t\tgallery {\n\t\t\t\timages {\n\t\t\t\t\tid\n\t\t\t\t\tfluid(maxWidth: 800, maxHeight: 600) {\n\t\t\t\t\t\t...GatsbyContentfulFluid_withWebp\n\t\t\t\t\t}\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}